---
import Angular from "../icons/Angular.astro"
import Bootstrap from "../icons/Bootstrap.astro"
import CSSIcon from "../icons/CSSIcon.astro"
import Github from "../icons/Github.astro"
import HTML from "../icons/HTML.astro"
import Java from "../icons/Java.astro"
import JavaScript from "../icons/JavaScript.astro"
import MongoDB from "../icons/MongoDB.astro"
import Nextjs from "../icons/Nextjs.astro"
import NodeJs from "../icons/NodeJs.astro"
import React from "../icons/React.astro"
import Tailwind from "../icons/Tailwind.astro"
import TypeScript from "../icons/TypeScript.astro"
import Badge from "./Badge.astro"
import Stro from '../icons/Stro.astro';

interface Props{
    count: number
}


    const TAGS = {
        ANGULAR: {
            name: 'Angular',
            class: 'bg-white',
            icon: Angular
        },
        HTML: {
            name: 'HTML',
            class: 'bg-white',
            icon: HTML
        },
        CSS: {
            name: 'CSS',
            class: 'bg-white',
            icon: CSSIcon
        }
        ,
        TAILWIND: {
            name: 'Tailwind CSS',
            class: 'bg-white',
            icon: Tailwind
        },
        JAVA: {
            name: 'Java',
            class: 'bg-white',
            icon: Java
        },
        JAVASCRIPT: {
            name: 'JavaScript',
            class: 'bg-white',
            icon: JavaScript
        },
        BOOTSTRAP: {
            name: 'Bootstrap',
            class: 'bg-white',
            icon: Bootstrap
        },
        NODEJS: {
            name: 'Node.Js',
            class: 'bg-white',
            icon: NodeJs
        },
        MONGODB: {
            name: 'MongoDB',
            class: 'bg-white',
            icon: MongoDB
        },
        TYPESCRIPT: {
            name: 'TypeScript',
            class: 'bg-white',
            icon: TypeScript
        },
        NEXT: {
            name: 'Next.js',
            class: 'bg-white',
            icon: Nextjs
        },
        REACT: {
            name: 'React',
            class: 'bg-white',
            icon: React
        },
        ASTRO: {
            name: 'Astro',
            class: 'bg-white',
            icon: Stro
        }
    }
    const PROJECTS = [
        {
            title: 'NeoIrr',
            description: 'A web application for health device control, It is a web API designed to interact with a device that has two sensors: one for linear positioning and another that measures the level of irradiance in the blue spectrum of light.',
            image: '/projects/neoirr.png',
            tags: [TAGS.REACT, TAGS.NEXT, TAGS.TYPESCRIPT, TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT,  TAGS.BOOTSTRAP, TAGS.TAILWIND]
        },
        {
            title: 'Attendance Control System',
            description: 'This project is a web application developed with Angular CLI 16.1.6, designed to facilitate attendance tracking through the use of QR codes. Its main objective is to optimize the process of registering attendance at events, classes, and other activities.',
            image: '/projects/chrono.png',
            tags: [ TAGS.ANGULAR, TAGS.NODEJS, TAGS.TYPESCRIPT, TAGS.MONGODB, TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT, TAGS.BOOTSTRAP, TAGS.TAILWIND]
        },
        {
            title: 'Livestock Control System',
            description: 'This project is a Livestock Control System developed using the MEAN stack for "La Hacienda" farm. The system is designed to efficiently manage and monitor livestock, facilitating tasks such as tracking animal health, breeding, and overall farm productivity.',
            image: '/projects/live.png',
            tags: [TAGS.ANGULAR, TAGS.NODEJS, TAGS.TYPESCRIPT, TAGS.MONGODB, TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT, TAGS.BOOTSTRAP, TAGS.TAILWIND]
        },
        {
            title: 'JavaChess - A chess made in java',
            description: 'Development of a two-player chess game in Java, encompassing the creation of a functional chess engine and a graphical user interface (GUI) for an engaging user experience. The goal is to provide players with a complete chess experience.',
            github: 'https://github.com/MJoDev/JavaChess',
            image: '/projects/chess.png',
            tags: [TAGS.JAVA]
        },
        {
            title: 'AstroPaint - A Micorsoft paint made in Astro',
            description: 'AstroPaint is a lightweight digital painting application, developed in just 30 minutes using Astro, Core JavaScript, HTML and CSS. The goal was to demonstrate rapid development capabilities while focusing on core functionalities.',
            link: 'https://astropaint.netlify.app/',
            github: 'https://github.com/MJoDev/AstroPaint',
            image: '/projects/astropaint.png',
            tags: [TAGS.JAVASCRIPT, TAGS.HTML, TAGS.CSS, TAGS.ASTRO]
        }
    ]

    const count = Astro.props.count
---

<div class="justify-center gap-6 container mx-auto flex flex-wrap">
    {PROJECTS.slice(0, count).map(({ title, github, description, tags, image, link }) => (
        <div class="w-96 h-auto flex flex-col shadow-lg bg-slate-100 rounded-lg hover:scale-105 transition mb-10 filter grayscale hover:grayscale-0">
            <div class="w-full">
                <img src={image} alt={`Screenshot of the project: ${title}`} class="rounded-t-lg shadow-lg w-full h-full object-cover" />
            </div>
            <div class="flex flex-col gap-y-4 p-6">
                <h3 class="text-xl font-bold">{title}</h3>
                <p class="text-base text-gray-600">{description}</p>
                <div class="flex flex-wrap gap-2 mt-2">
                    {tags.slice(0, 3).map((tag) => (
                        <span class="inline-flex items-center gap-1 px-3 py-1 text-sm font-medium text-gray-600 bg-gray-200 rounded-full">
                            <tag.icon class="w-4 h-4" />
                            {tag.name}
                        </span>
                    ))}
                </div>
                {
                    github && (
                        <a href={github} target="_blank" class="flex items-center gap-x-2 rounded-lg border opacity-50 border-black py-2 px-4 hover:opacity-100 ">
                            <Github class="size-6"></Github>View Code
                        </a>
                    )
                }
                {
                    link && (
                        <a href={link} target="_blank" class="flex items-center gap-x-2 rounded-lg border opacity-50 border-black py-2 px-4 hover:opacity-100 ">
                            Live Demo
                        </a>    
                    )
                }
            </div>
        </div>
    ))}
    {
        count === 3 && (
            <div class="w-full flex justify-center mt-6">
                <a href="/projects" class="px-6 py-2 text-white bg-black rounded-lg hover:bg-green-700 transition">
                    View More Projects
                </a>
            </div>
        ) 
    }
</div>

